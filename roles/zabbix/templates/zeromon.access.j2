#!/bin/bash

{{ ansible_managed | comment }}

# Welcome the user before giving authentication information for the Zabbix web UI
echo
echo 'Welcome to your Zeromon Zabbix installation!'
echo
echo 'You can log in at:'
echo

# Determine the "manufacturer" so that we know how to get the public DNS host name or IP address metadata from the vendor
vendor=$(dmidecode -s system-manufacturer)

case "$vendor" in

    'Amazon EC2')
        public_hostname_url='http://169.254.169.254/latest/meta-data/public-hostname'
        public_ipv4_url='http://169.254.169.254/latest/meta-data/public-ipv4'
        ;;

    'DigitalOcean')
#        public_hostname_url='http://169.254.169.254/metadata/v1/hostname' # WIP/TODO: These do not necessarily resolve
        public_ipv4_url='http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address'
        ;;

    # Linode does not self-identify in dmidecode
    # Linode also has no way to determine IP address or host name easily via StackScript
    # So, just use "ip addr" for now...
    'QEMU')
#        public_hostname_url='' # WIP/TODO: figure out the .members.linode.com host name ideally
#        public_ipv4_url=''
        public_ipv4=$(ip addr show eth0 | fgrep 'inet ' | awk {'print $2'} | cut -d '/' -f1)
        ;;

esac

# WIP/TODO: Take out this first check for "$public_hostname_url" being empty
# ..once we find the right thing to do for DigitalOcean host names that may not resolve in DNS
if [ ! -z "$public_hostname_url" ]
then
    public_hostname=$(curl -sf "$public_hostname_url")
fi

# Determine if the server has a public DNS/host name and use that if so
if [ ! -z "$public_hostname" ]
then
  zabbix_url="$public_hostname"

# Otherwise, just use the public IPv4 address
else

  if [ ! -z "$public_ipv4_url" ]
  then
    public_ipv4=$(curl -sf "$public_ipv4_url")
  fi

  zabbix_url="$public_ipv4"
fi

# Display the URL along with credentials for the user to log in to the Zabbix web interface
echo "http://${zabbix_url}/"
echo

echo 'User name: Admin'
zabbix_admin_password=$(cat /root/zabbix_admin_password)
echo "Password: ${zabbix_admin_password}"
echo

# Tell the user how to set up e-mail notifications
echo "Once logged in, you can visit the 'Media' tab at http://${zabbix_url}/profile.php#mediaTab to specify an e-mail address to receive notifications"
echo

# Some final information telling the user about how to suppress this information and how to contact Zeromon for support
echo 'You can run "rm /root/.zeromon" to suppress this message, but your Zabbix Admin user web password can still be found in /root/zabbix_admin_password'
echo
echo 'Please visit https://zeromon.io/ or contact support@zeromon.io if you have any questions or concerns!'
echo
